# See https://github.com/actions/starter-workflows/blob/1067f16ad8a1eac328834e4b0ae24f7d206f810d/ci/pylint.yml for original reference file
name: Run Linting/Formatting on Pull Requests

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#      - name: Cache module
#        uses: actions/cache@v3
#        with:
#          path: |
#            ./repositories
#            ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ github.ref_name }}
#          restore-keys: |
#            ${{ runner.os }}-pip-${{ github.ref_name }}
#            ${{ runner.os }}-pip-
#            ${{ runner.os }}-
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.10.6
 #         cache: 'pip'
 #         cache-dependency-path: '**/requirements*.txt'
 #     - name: Install PyLint
 #       run: pip install pylint
 #     # This lets PyLint check to see if it can resolve imports 
 #     - name: Install dependencies
 #       run : |
 #         export COMMANDLINE_ARGS="--skip-torch-cuda-test --exit"
 #         python launch.py
 #     - name: Analysing the code with pylint
 #       run: |
 #         pylint $(git ls-files '*.py')
  test:
#    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.6
      - name: Cache module
        uses: actions/cache@v3
        with:
          path: |
            ./repositories
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ github.ref_name }}
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Run tests
        run: |
          pip install coverage
          pip install pytest
          pip install pytest-cov
          coverage run --append launch.py --tests basic_features --no-half --disable-opt-split-attention --use-cpu all --skip-torch-cuda-test
          coverage report
          coverage xml
      - name: lazy cat
        if: always()
        run: |
          ls .
          cat test/stderr.txt
      - name: Upload main app stdout-stderr
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: stdout-stderr
          path: |
            test/stdout.txt
            test/stderr.txt
            coverage.xml
